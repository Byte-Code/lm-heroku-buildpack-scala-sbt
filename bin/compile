#!/usr/bin/env sh
# Usage
# bin/compile BUILD_DIR CACHE_DIR ENV_DIR
# BUILD_DIR=$1 CACHE_DIR=$2 ENV_DIR=$3

# Compile SBT project
# Check if SBT dependencies are cached. If not, download them.
echo "-----> SBT dependency check"
if [ `ls $HOME/cache/sbt/bin/sbt 2>/dev/null` ]; then
  echo "     SBT is cached. Skip download.";
else
  # Consider to get SBT version from $1/project/build.properties instead of SBT_URL environment
  echo "     SBT is not cached. Start download";
  SBT_VERSION=$(cat $1/project/build.properties | grep sbt.version | cut -d= -f2);
  SBT_URL="https://github.com/sbt/sbt/releases/download/v$SBT_VERSION/sbt-$SBT_VERSION.zip";
  echo "     SBT version: $SBT_VERSION";
  echo "     SBT url: $SBT_URL";
  wget -v $SBT_URL -O $HOME/cache/sbt.zip;
  echo "     unzip sbt.zip to $HOME/cache";
  unzip -qq $HOME/cache/sbt.zip -d $HOME/cache;
  echo "     make directory for $HOME/cache/.ivy/local";
  mkdir -p $HOME/cache/.ivy/local;
  echo "     copy sbt libs to $HOME/cache/.ivy/local";
  cp -r $HOME/cache/sbt/lib/local-preloaded/* $HOME/cache/.ivy/local;
  echo "     add sbt to PATH";
  export PATH=$HOME/cache/sbt/bin/sbt:$PATH;
  echo "     delete $HOME/cache/sbt.zip";
  rm -rf $HOME/cache/sbt.zip;
fi


# We are ready to build. Change into SBT project directory
echo "-----> Compile SBT project for release"
cd $1
echo "       Run tests"
$HOME/cache/sbt -ivy $HOME/cache/.ivy clean test
echo "       Create dist for release"
sbt -ivy $HOME/cache/.ivy dist




